[
  {
    "name": "Name",
    "args": [{
      "name": "id",
      "type": "handle"
    }],
    "returns": {
      "type": "string"
    },
    "description": "Returns the name of `id`.  Note: This is not the same as XEdit's `Name` function - `LongName` is."
  },
  {
    "name": "LongName",
    "args": [{
      "name": "id",
      "type": "handle"
    }],
    "returns": {
      "type": "string"
    },
    "description": "Identical to the `Name` function from XEdit scripting."
  },
  {
    "name": "DisplayName",
    "args": [{
      "name": "id",
      "type": "handle"
    }],
    "returns": {
      "type": "string"
    },
    "description": "Returns the name of `id` used for display purposes in ZEdit's user interface."
  },
  {
    "name": "Path",
    "args": [{
      "name": "id",
      "type": "handle"
    }],
    "returns": {
      "type": "string"
    },
    "description": "Returns the path to `id`.  All paths returned from this function can be used with `GetElement`."
  },
  {
    "name": "LongPath",
    "args": [{
      "name": "id",
      "type": "handle"
    }],
    "returns": {
      "type": "string"
    },
    "description": "Returns a fully qualified path to `id`.  All paths returned from this function can be used with `GetElement`."
  },
  {
    "name": "LocalPath",
    "args": [{
      "name": "id",
      "type": "handle"
    }],
    "returns": {
      "type": "string"
    },
    "description": "Returns the path of `id` within a its parent record.  All paths returned from this function can be used with `GetElement`."
  },
  {
    "name": "Signature",
    "args": [{
      "name": "id",
      "type": "handle"
    }],
    "returns": {
      "type": "string"
    },
    "description": "Returns the signature of `id`."
  },
  {
    "name": "SortKey",
    "args": [{
      "name": "id",
      "type": "handle"
    }],
    "returns": {
      "type": "string"
    },
    "description": "Returns the sort key of `id`."
  },
  {
    "name": "GetValue",
    "args": [{
      "name": "id",
      "type": "handle",
      "description": "Handle to start path resolution from."
    }, {
      "name": "path",
      "type": "string",
      "description": "Path to resolve."
    }],
    "returns": {
      "type": "string"
    },
    "description": "Returns the editor value at `path`.  This is the same value displayed in the record view.  Returns an empty string if `path` does not exist."
  },
  {
    "name": "SetValue",
    "args": [{
      "name": "id",
      "type": "handle",
      "description": "Handle to start path resolution from."
    }, {
      "name": "path",
      "type": "string",
      "description": "Path to resolve."
    }, {
      "name": "value",
      "type": "string",
      "description": "Value to apply."
    }],
    "description": "Sets the editor value at `path` to `value`.  This is the same value displayed in the record view."
  },
  {
    "name": "GetIntValue",
    "args": [{
      "name": "id",
      "type": "handle",
      "description": "Handle to start path resolution from."
    }, {
      "name": "path",
      "type": "string",
      "description": "Path to resolve."
    }],
    "returns": {
      "type": "integer"
    },
    "description": "Returns the native integer value at `path`.  Returns 0 if `path` does not exist."
  },
  {
    "name": "SetIntValue",
    "args": [{
      "name": "id",
      "type": "handle",
      "description": "Handle to start path resolution from."
    }, {
      "name": "path",
      "type": "string",
      "description": "Path to resolve."
    }, {
      "name": "value",
      "type": "integer",
      "description": "Value to apply."
    }],
    "description": "Sets the native integer value at `path` to `value`."
  },
  {
    "name": "GetUIntValue",
    "args": [{
      "name": "id",
      "type": "handle",
      "description": "Handle to start path resolution from."
    }, {
      "name": "path",
      "type": "string",
      "description": "Path to resolve."
    }],
    "returns": {
      "type": "unsigned integer"
    },
    "description": "Returns the native unsigned integer value at `path`.  Returns 0 if `path` does not exist."
  },
  {
    "name": "SetUIntValue",
    "args": [{
      "name": "id",
      "type": "handle",
      "description": "Handle to start path resolution from."
    }, {
      "name": "path",
      "type": "string",
      "description": "Path to resolve."
    }, {
      "name": "value",
      "type": "unsigned integer",
      "description": "Value to apply."
    }],
    "description": "Sets the native unsigned integer value at `path` to `value`."
  },
  {
    "name": "GetFloatValue",
    "args": [{
      "name": "id",
      "type": "handle",
      "description": "Handle to start path resolution from."
    }, {
      "name": "path",
      "type": "string",
      "description": "Path to resolve."
    }],
    "returns": {
      "type": "float"
    },
    "description": "Returns the native float value at `path`.  Returns 0.0 if `path` does not exist."
  },
  {
    "name": "SetFloatValue",
    "args": [{
      "name": "id",
      "type": "handle",
      "description": "Handle to start path resolution from."
    }, {
      "name": "path",
      "type": "string",
      "description": "Path to resolve."
    }, {
      "name": "value",
      "type": "float",
      "description": "Value to apply."
    }],
    "description": "Sets the native float value at `path` to `value`."
  },
  {
    "name": "SetFlag",
    "args": [
      {
        "name": "id",
        "type": "handle",
        "description": "Handle to start path resolution from."
      },
      {
        "name": "path",
        "type": "string",
        "description": "Path to resolve."
      },
      {
        "name": "name",
        "type": "string",
        "description": "Flag to set."
      },
      {
        "name": "state",
        "type": "boolean",
        "description": "True to enable the flag, false to disable it."
      }
    ],
    "description": "Resolves the flags element at `path`, and sets flag `name` to `state`."
  },
  {
    "name": "GetFlag",
    "args": [
      {
        "name": "id",
        "type": "handle",
        "description": "Handle to start path resolution from."
      },
      {
        "name": "path",
        "type": "string",
        "description": "Path to resolve."
      },
      {
        "name": "name",
        "type": "string",
        "description": "Name of the flag to get."
      }
    ],
    "returns": {
      "type": "boolean"
    },
    "description": "Resolves the flags element at `path`, and gets the state of flag `name`."
  },
  {
    "name": "GetEnabledFlags",
    "args": [
      {
        "name": "id",
        "type": "handle",
        "description": "Handle to start path resolution from."
      },
      {
        "name": "path",
        "type": "string",
        "description": "Path to resolve."
      }
    ],
    "returns": {
      "type": "array of string"
    },
    "description": "Resolves the flags element at `path` and returns an array of the names of the enabled flags on it."
  },
  {
    "name": "SetEnabledFlags",
    "args": [
      {
        "name": "id",
        "type": "handle",
        "description": "Handle to start path resolution from."
      },
      {
        "name": "path",
        "type": "string",
        "description": "Path to resolve."
      },
      {
        "name": "flags",
        "type": "array of string",
        "description": "Flags to enable."
      }
    ],
    "description": "Resolves the flags element at `path` and sets the enabled flags to `flags`.  Note: This disables any active flags that are not in `flags`."
  },
  {
    "name": "GetAllFlags",
    "args": [
      {
        "name": "id",
        "type": "handle",
        "description": "Handle to start path resolution from."
      },
      {
        "name": "path",
        "type": "string",
        "description": "Path to resolve."
      }
    ],
    "returns": {
      "type": "array of string"
    },
    "description": "Resolves the flags element at `path` and returns an array of the names of all of the flags it supports.  Flag positions in the array indicate the binary bits they corresponds to."
  },
  {
    "name": "GetEnumOptions",
    "args": [
      {
        "name": "id",
        "type": "handle",
        "description": "Handle to start path resolution from."
      },
      {
        "name": "path",
        "type": "string",
        "description": "Path to resolve."
      }
    ],
    "returns": {
      "type": "array of string"
    },
    "description": "Resolves the enumeration element at `path` and returns an array of the options it supports.  Enumeration positions in the array indicate the binary bits they corresponds to."
  }
]
