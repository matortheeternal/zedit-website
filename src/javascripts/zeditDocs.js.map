{"version":3,"sources":["_js/node_modules/browser-pack/_prelude.js","_js/_js/zeditDocs.js"],"names":[],"mappings":"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","file":"zeditDocs.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\nconst ngapp = angular.module('zeditDocs', ['ui.router', 'hc.marked']);\n\nngapp.config(function ($compileProvider) {\n    // allow docs:// urls\n    $compileProvider.aHrefSanitizationWhitelist(/^\\s*(https?|docs):/);\n});\n\n//== begin angular files ==\nngapp.directive('apiItems', function() {\n    return {\n        restrict: 'E',\n        scope: {},\n        templateUrl: 'partials/apiItems.html',\n        controller: 'apiItemsController',\n        controllerAs: 'vm',\n        bindToController: {\n            api: '@',\n            basePath: '@',\n            path: '@',\n            items: '=?',\n            depth: '=?'\n        }\n    }\n});\n\nngapp.controller('apiItemsController', function(resourceService) {\n    let ctrl = this;\n    ctrl.tintBg = (ctrl.depth || 0) % 2 === 0;\n\n    if (ctrl.path) {\n        let basePath = ctrl.basePath || 'docs/development/apis',\n            path = `${basePath}/${ctrl.path}`;\n        resourceService.get(path).then((items) => ctrl.items = items);\n    }\n\n    ctrl.$watch('items', function() {\n        ctrl.items.forEach(function(item) {\n            if (!item.type) item.type = 'function';\n            item.isEvent = item.type === 'event';\n        });\n    });\n});\n\nngapp.directive('childrenTopics', function() {\n    return {\n        restrict: 'E',\n        scope: false,\n        templateUrl: 'partials/childrenTopics.html'\n    }\n});\n\nngapp.directive('codeBlock', function(themeService, resourceService, codeMirrorFactory) {\n    let linkFn = function(scope, element) {\n        // load code\n        let basePath = scope.basePath || 'docs/development/apis',\n            path = `${basePath}/${scope.path}`;\n\n        resourceService.load(path).then(function() {\n            // attach code mirror\n            let language = resourceService.getFileExt(scope.path),\n                options = codeMirrorFactory.getOptions(language, true),\n                textArea = element[0].firstElementChild,\n                cm = CodeMirror.fromTextArea(textArea, options);\n            cm.setValue(code.trimRight());\n\n            // event handling\n            scope.$on('syntaxThemeChanged', function(e, theme) {\n                let themeName = themeService.getThemeName(theme, 'default');\n                cm.setOption('theme', themeName);\n                cm.refresh();\n            });\n        });\n    };\n\n    return {\n        restrict: 'E',\n        scope: {\n            basePath: '@',\n            path: '@'\n        },\n        template: '<textarea></textarea>',\n        link: linkFn\n    }\n});\n\nngapp.directive('dynController', function($controller, $parse) {\n    let getController = function(ctrlName, scope, element, attrs) {\n        return $controller(ctrlName, {\n            $scope: scope,\n            $element: element,\n            $attrs: attrs\n        });\n    };\n\n    let resolveController = function(ctrlExpr, scope, element, attrs) {\n        let ctrl = $parse(ctrlExpr)(scope);\n        return ctrl && getController(ctrl, scope, element, attrs);\n    };\n\n    return {\n        restrict: 'A',\n        scope: true,\n        link: function(scope, element, attrs) {\n            attrs.$observe('dynController', function(ctrlExpr) {\n                let controller = resolveController(ctrlExpr, scope, element, attrs);\n                if (!controller) return;\n                element.data('$Controller', controller);\n            });\n        }\n    }\n});\n\nngapp.directive('enumerationMembers', function() {\n    return {\n        restrict: 'E',\n        templateUrl: 'partials/enumerationMembers.html',\n        scope: {\n            members: '='\n        },\n        replace: true\n    }\n});\n\nngapp.directive('objectSchema', function() {\n    return {\n        restrict: 'E',\n        templateUrl: 'partials/objectSchema.html',\n        controller: 'objectSchemaController',\n        scope: {\n            basePath: '@',\n            path: '@',\n            schema: '=?'\n        },\n        replace: true\n    }\n});\n\nngapp.controller('objectSchemaController', function($scope, resourceService) {\n    if ($scope.path) {\n        let basePath = $scope.basePath || 'app/docs/development/apis',\n            path = `${basePath}/${$scope.path}`;\n        resourceService.get(path).then(schema => $scope.schema = schema);\n    }\n});\n\nngapp.service('codeMirrorFactory', function(themeService) {\n    let options = {\n        js: { mode: 'javascript' },\n        html: { mode: 'htmlmixed' }\n    };\n\n    this.getOptions = function(label, readOnly = false) {\n        let filename = themeService.getCurrentSyntaxTheme();\n        return Object.assign({}, options[label], {\n            theme: themeService.getThemeName(filename, 'default'),\n            lineNumbers: !readOnly,\n            readOnly: readOnly,\n            scrollbarStyle: readOnly ? null : 'native',\n            lineWrapping: true\n        });\n    };\n});\n\nngapp.service('errorResolutionFactory', function() {\n    // PRIVATE\n    let ignoreResolution = {\n        label: 'Ignore',\n        class: 'neutral',\n        description: 'This resolution will leave the error in the plugin.'\n    };\n\n    let removeRecordResolution = {\n        label: 'Delete',\n        class: 'negative',\n        description: 'This resolution will remove the record from the plugin.'\n    };\n\n    let tweakEdidResolution = {\n        label: 'Tweak EDID',\n        class: 'positive',\n        availability: 'When the record has an Editor ID.',\n        description: 'This resolution will adjusted the EditorID of the record so it is no longer an ITM.'\n    };\n\n    let tweakPositionResolution = {\n        label: 'Tweak Position',\n        class: 'positive',\n        availability: 'When the record is a placed object.',\n        description: 'This resolution will slightly adjust the position of the reference so it is no longer an ITM.'\n    };\n\n    let nullifyResolution = {\n        label: 'Nullify',\n        class: 'positive',\n        availability: 'When the element allows NULL references.',\n        description: 'This resolution will set the reference to a NULL [00000000] reference.'\n    };\n\n    let removeResolution = {\n        label: 'Remove',\n        class: 'negative',\n        description: 'This resolution will remove the error element from the record.'\n    };\n\n    let repairResolution = {\n        label: 'Repair',\n        class: 'positive',\n        description: 'This resolution will fix the order of subrecords in the record and trim invalid ones.'\n    };\n\n    let replaceNavmeshResolution = {\n        label: 'Replace Navmesh',\n        class: 'positive',\n        availability: 'When the record is a navmesh and a replacement navmesh is present.',\n        description: 'This resolution will replace the deleted navmesh with the new navmesh introduced by the plugin.'\n    };\n\n    let buryNavmeshResolution = {\n        label: 'Bury Navmesh',\n        class: 'positive',\n        availability: 'When the record is a navmesh.',\n        description: 'This resolution will lower the navmesh\\'s verticies below the ground and remove its edge links.'\n    };\n\n    let undeleteAndDisableResolution = {\n        label: 'Undelete and Disable',\n        class: 'positive',\n        availability: 'When the record is a placed object.',\n        description: 'This resolution will undelete the reference and mark it as disabled.'\n    };\n\n    let clearSubrecordsResolution = {\n        label: 'Clear Subrecords',\n        color: 'positive',\n        availability: 'When the record is not a placed object or a navmesh.',\n        description: 'This resolution will clear the record\\'s subrecords.'\n    };\n\n    let restoreResolution = {\n        label: 'Restore',\n        class: 'negative',\n        description: 'This resolution will restore the record.  You should not use this resolution unless you know exactly what you\\'re doing!'\n    };\n\n    let identicalResolutions = [removeRecordResolution, tweakEdidResolution,\n        tweakPositionResolution, ignoreResolution];\n\n    // PUBLIC\n    this.errorResolutions = {\n        ITM: identicalResolutions,\n        ITPO: identicalResolutions,\n        DR: [replaceNavmeshResolution, buryNavmeshResolution,\n            undeleteAndDisableResolution, clearSubrecordsResolution,\n            restoreResolution, ignoreResolution],\n        UES: [repairResolution, removeRecordResolution, ignoreResolution],\n        URR: [nullifyResolution, removeResolution, ignoreResolution],\n        UER: [nullifyResolution, removeResolution, ignoreResolution],\n        OE: [ignoreResolution]\n    };\n\n    this.ignoreResolution = ignoreResolution;\n});\n\nngapp.service('errorTypeFactory', function () {\n    this.errorTypes = function () {\n        return [\n            {\n                group: 0,\n                name: \"Identical to Master Records\",\n                acronym: \"ITM\",\n                caption: \"ITMs are records that have been overridden in a plugin file but haven't been change relative to their master record.\",\n                benign: true,\n                errors: []\n            },\n            {\n                group: 1,\n                name: \"Identical to Previous Override Records\",\n                acronym: \"ITPO\",\n                caption: \"ITPOs are records that have been overridden in a plugin file that haven't been changed relative to their previous override.\",\n                benign: true,\n                errors: []\n            },\n            {\n                group: 2,\n                name: \"Deleted Records\",\n                acronym: \"DR\",\n                caption: \"DRs are records which have been marked as deleted with either their subrecords still present or the chance to cause CTDs when referenced.\",\n                errors: []\n            },\n            {\n                group: 3,\n                name: \"Unexpected Subrecords\",\n                acronym: \"UES\",\n                caption: \"UESs are errors where the data structure of a record is abnormal.\",\n                benign: true,\n                errors: []\n            },\n            {\n                group: 4,\n                name: \"Unresolved References\",\n                acronym: \"URR\",\n                caption: \"URRs are errors where a record references another record that doesn't exist.\",\n                benign: true,\n                errors: []\n            },\n            {\n                group: 5,\n                name: \"Unexpected References\",\n                acronym: \"UER\",\n                caption: \"UERs are errors where a record references another record in an abnormal fashion.\",\n                benign: true,\n                errors: []\n            },\n            {\n                group: 6,\n                name: \"Other Errors\",\n                acronym: \"OE\",\n                caption: \"Errors that don't fall into the other groups are placed in this group.\",\n                benign: true,\n                errors: []\n            }\n        ];\n    };\n});\n\nngapp.service('errorService', function($exceptionHandler) {\n    this.try = function(callback) {\n        try {\n            callback();\n            return true;\n        } catch(x) {\n            $exceptionHandler(x)\n        }\n    };\n});\n\nngapp.service('protocolService', function($document) {\n    this.init = function(scope) {\n        let handleDocsLink = function(href) {\n            scope.$broadcast('helpNavigateTo', href.substr(7));\n        };\n\n        let protocolHandlers = {\n            docs: handleDocsLink\n        };\n\n        let handleLink = function(href) {\n            let protocol = href.match(/([^:]+)/)[1],\n                handler = protocolHandlers[protocol];\n            handler && handler(href);\n            return !!handler;\n        };\n\n        // handle link protocols properly\n        $document.bind('click', function(event) {\n            if (event.target.tagName !== 'A') return;\n            if (!event.target.href) return;\n            if (handleLink(event.target.href)) event.preventDefault();\n        });\n    };\n});\n\nngapp.service('resourceService', function($q, $http) {\r\n    let service = this;\r\n\r\n    let retrieveResource = function(action, path, name) {\r\n        $http.get(path).then(function(data) {\r\n            service[name] = data;\r\n            action.resolve(data);\r\n        }, function() {\r\n            let error = `Failed to load resource at ${path}`;\r\n            alert(error);\r\n            action.reject(error);\r\n        });\r\n    };\r\n\r\n    this.get = function(path, name) {\r\n        let action = $q.defer();\r\n        service.hasOwnProperty(name) ?\r\n            action.resolve(service[name]) :\r\n            retrieveResource(action, path, name);\r\n        return action.promise;\r\n    };\r\n});\nngapp.service('themeService', function(resourceService) {\n    let service = this;\n\n    this.getCurrentTheme = function() {\n        let theme = localStorage.getItem('theme');\n        return resourceService.themes.includes(theme) ? theme : 'day';\n    };\n\n    this.getCurrentSyntaxTheme = function() {\n        let theme = localStorage.getItem('syntaxTheme');\n        return resourceService.syntaxThemes.includes(theme) ? theme : '';\n    };\n\n    this.getThemeName = function(filename, defaultName = '') {\n        let match = filename.match(/(.*)\\.css/);\n        return match ? match[1] : defaultName;\n    };\n\n    this.init = function(scope) {\n        let themeStylesheet = document.getElementById('theme'),\n            syntaxThemeStylesheet = document.getElementById('syntaxTheme');\n\n        // event listeners\n        scope.$on('setTheme', (e, theme) => scope.theme = theme);\n        scope.$on('setSyntaxTheme', (e, theme) => scope.syntaxTheme = theme);\n\n        scope.$watch('theme', function() {\n            themeStylesheet.href = `${scope.theme}.css`;\n            scope.$broadcast('themeChanged', scope.theme);\n        });\n\n        scope.$watch('syntaxTheme', function() {\n            let blank = scope.syntaxTheme === '';\n            syntaxThemeStylesheet.href = blank ? '' : `${scope.syntaxTheme}.css`;\n            scope.$broadcast('syntaxThemeChanged', scope.syntaxTheme);\n        });\n\n        // initialization\n        scope.theme = service.getCurrentTheme();\n        scope.syntaxTheme = service.getCurrentSyntaxTheme();\n    }\n});\n\nngapp.config(function($stateProvider) {\n    $stateProvider.state('docs', {\n        url: '',\n        templateUrl: 'partials/docs.html',\n        controller: 'docsController',\n        resolve: {\n            themes: function(resourceService) {\n                return resourceService.get('themes.json', 'themes');\n            },\n            syntaxThemes: function(resourceService) {\n                return resourceService.get('syntaxThemes.json', 'syntaxThemes');\n            }\n        }\n    });\n});\n\nngapp.controller('docsController', function($scope, $element, helpService, errorService, themeService) {\n    // helper variables\n    let containerElement = $element[0].firstElementChild;\n\n    $scope.history = [];\n    $scope.historyIndex = -1;\n\n    // helper functions\n    let selectTopic = function(topic) {\n        if ($scope.topic) $scope.topic.selected = false;\n        $scope.topic = topic;\n        topic.selected = true;\n    };\n\n    let expandTopic = function(topic) {\n        $scope.$broadcast('expandTreeNode', topic);\n    };\n\n    // scope functions\n    $scope.navigateTo = function(path) {\n        selectTopic(helpService.getTopic(path, expandTopic));\n    };\n\n    $scope.historyGo = function() {\n        $scope.skipHistory = true;\n        selectTopic($scope.history[$scope.historyIndex]);\n    };\n\n    $scope.back = function() {\n        if ($scope.historyIndex <= 0) return;\n        $scope.historyIndex--;\n        $scope.historyGo();\n    };\n\n    $scope.forward = function() {\n        if ($scope.historyIndex === $scope.history.length - 1) return;\n        $scope.historyIndex++;\n        $scope.historyGo();\n    };\n\n    // event listeners\n    $scope.$on(\"helpNavigateTo\", function(e, path) {\n        errorService.try(function() {\n            $scope.$applyAsync(() => $scope.navigateTo(path));\n        });\n    });\n\n    $scope.$on('navigateToChild', function(e, child) {\n        $scope.$broadcast('expandTreeNode', $scope.topic);\n        selectTopic(child);\n        e.stopPropagation && e.stopPropagation();\n    });\n\n    $scope.$watch('topic', function() {\n        containerElement.scrollTop = 0;\n        if ($scope.skipHistory) {\n            $scope.skipHistory = false;\n            return;\n        }\n        $scope.history.push($scope.topic);\n        $scope.historyIndex = $scope.history.length - 1;\n    });\n\n    // initialization\n    themeService.init($scope);\n    $scope.topics = helpService.getTopics();\n    selectTopic($scope.topics[0]);\n});\n\nngapp.controller('resolveModalDocumentationController', function($scope, errorTypeFactory, errorResolutionFactory) {\n    $scope.errorTypes = errorTypeFactory.errorTypes();\n    $scope.resolutions = errorResolutionFactory.errorResolutions;\n});\n//== end angular files ==\n\nngapp.run(function ($rootScope, protocolService) {\n    protocolService.init($rootScope);\n});\n\n},{}]},{},[1])\n\n//# sourceMappingURL=zeditDocs.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}